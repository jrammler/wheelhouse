package templates

import (
	"fmt"
	"github.com/jrammler/wheelhouse/internal/entity"
	"slices"
	"time"
)

templ Commands(commands []entity.Command) {
	@page() {
		<h1>Commands</h1>
		<ul>
			for _, command := range commands {
				<li><form action={ templ.URL(fmt.Sprintf("/execute/%s", command.Id)) } method="post"><button>{ command.Name }</button></form></li>
			}
		</ul>
	}
}

templ ExecutionList(history []entity.ExecutionHistoryEntry) {
	@page() {
		<h1>Execution History</h1>
		<ul>
			for _, entry := range slices.Backward(history) {
				<li>
					<a href={ templ.URL(fmt.Sprintf("/executions/%d", entry.ExecId)) }>{ fmt.Sprintf("[%s] %s", entry.Time.Format(time.DateTime), entry.CommandName) } </a>
				</li>
			}
		</ul>
	}
}

func defaultInt(opt *int) int {
	if opt == nil {
		return 0
	}
	return *opt
}

templ LogList(execution *entity.CommandExecution, start *int) {
	for _, entry := range execution.Log[defaultInt(start):] {
		<li
			if entry.Stream == "stderr" {
				style="color:Red"
			}
		>[{ entry.Stream }] { entry.Data }</li>
	}
	if (execution.ExitCode == nil) {
		// the command is still running
		<li style="color:grey" hx-get={ fmt.Sprintf("/executions/%d/log?start=%d", execution.ExecId, len(execution.Log)) } hx-swap="outerHTML" hx-trigger="load delay:2s">running...</li>
	} else if start != nil {
		// if start is nil, this is not an htmx call -> no oob swap
		<p id="exitcode" hx-swap-oob="true">{ fmt.Sprintf("%d", *execution.ExitCode) }</p>
	}
}

templ ExecutionDetails(execution *entity.CommandExecution) {
	@page() {
		<h1>ExitCode</h1>
		if execution.ExitCode == nil {
			<p id="exitcode">Execution not finished</p>
		} else {
			<p id="exitcode">{ fmt.Sprintf("%d", *execution.ExitCode) }</p>
		}
		<h1>Output</h1>
		<ul style="font-family:monospace">
			@LogList(execution, nil)
		</ul>
		<h1>Controls</h1>
		<p><a href={ templ.URL(fmt.Sprintf("/executions/%d", execution.ExecId)) }>Refresh</a></p>
	}
}
